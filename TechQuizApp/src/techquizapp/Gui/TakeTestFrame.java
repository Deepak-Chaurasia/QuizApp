/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package techquizapp.Gui;

import com.sun.speech.freetts.Voice;
import com.sun.speech.freetts.VoiceManager;
import edu.cmu.sphinx.api.LiveSpeechRecognizer;
import edu.cmu.sphinx.api.SpeechResult;
import java.awt.Color;
import java.awt.Font;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import speechrecog.LoginSR;
import techquizapp.Dao.PerformanceDao;
import techquizapp.Dao.QuestionDao;
import techquizapp.Pojo.AnswerPojo;
import techquizapp.Pojo.AnswerStorePojo;
import techquizapp.Pojo.ExamPojo;
import techquizapp.Pojo.PerformancePojo;
import techquizapp.Pojo.QuestionPojo;
import techquizapp.Pojo.QuestionStore;
import techquizapp.Pojo.UserProfile;

/**
 *
 * @author DeepakChaurasia
 */
public class TakeTestFrame extends javax.swing.JFrame {

    private ExamPojo exam;
    private QuestionStore qstore;
    private AnswerStorePojo astore;
    private int qno, pos = 0;

    private TextToVoice tv, tv2;
    private VoiceToText vt;

    public TakeTestFrame() {
        this.setUndecorated(true);
        initComponents();
        this.setLocationRelativeTo(null);
        lblUserName.setText("Hello :" + UserProfile.getUsername());
        qstore = new QuestionStore();
        astore = new AnswerStorePojo();
        qno = 1;
        //lblQno.setText(lblQno.getText() + qno);
        lblQno.setText("Question no: " + qno);
        
        tv = new TextToVoice();
        tv.speech = "All the best ";
        tv.start();
        vt = new VoiceToText();
        vt.start();
    }

    public TakeTestFrame(ExamPojo exam) {
        this();
        this.exam = exam;
        lblTitle.setText(exam.getLanguage().toUpperCase() + " PAPER");
        loadQuestions();
        showQuestion();
        
        tv2 = new TextToVoice();
        tv2.speech = txtQuestion.getText();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtQuestion = new javax.swing.JTextArea();
        lblTitle = new javax.swing.JLabel();
        btnNext = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        lblQno = new javax.swing.JLabel();
        btnDone = new javax.swing.JButton();
        lblUserName = new javax.swing.JLabel();
        lblLogout = new javax.swing.JLabel();
        btnPrevious = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jrOption1 = new javax.swing.JRadioButton();
        jrOption2 = new javax.swing.JRadioButton();
        jrOption3 = new javax.swing.JRadioButton();
        jrOption4 = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(1920, 1080));

        txtQuestion.setColumns(20);
        txtQuestion.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        txtQuestion.setRows(5);
        jScrollPane1.setViewportView(txtQuestion);

        lblTitle.setBackground(new java.awt.Color(0, 0, 0));
        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 50)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 255, 0));
        lblTitle.setText("Exam Paper");

        btnNext.setBackground(new java.awt.Color(255, 255, 255));
        btnNext.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        btnNext.setForeground(new java.awt.Color(102, 0, 102));
        btnNext.setText("Next");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnCancel.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        btnCancel.setForeground(new java.awt.Color(102, 0, 102));
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        lblQno.setBackground(new java.awt.Color(0, 0, 0));
        lblQno.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        lblQno.setForeground(new java.awt.Color(255, 255, 0));

        btnDone.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        btnDone.setForeground(new java.awt.Color(102, 0, 102));
        btnDone.setText("Done");
        btnDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoneActionPerformed(evt);
            }
        });

        lblUserName.setBackground(new java.awt.Color(0, 0, 0));
        lblUserName.setFont(new java.awt.Font("Tahoma", 0, 25)); // NOI18N
        lblUserName.setForeground(new java.awt.Color(255, 255, 0));
        lblUserName.setText("jLabel1");

        lblLogout.setBackground(new java.awt.Color(0, 0, 0));
        lblLogout.setFont(new java.awt.Font("Tahoma", 0, 25)); // NOI18N
        lblLogout.setForeground(new java.awt.Color(255, 255, 0));
        lblLogout.setText("Logout");
        lblLogout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblLogoutMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblLogoutMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblLogoutMouseExited(evt);
            }
        });

        btnPrevious.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        btnPrevious.setForeground(new java.awt.Color(102, 0, 102));
        btnPrevious.setText("Previous");
        btnPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviousActionPerformed(evt);
            }
        });

        jLabel2.setText("jLabel2");

        buttonGroup1.add(jrOption1);
        jrOption1.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        jrOption1.setForeground(new java.awt.Color(255, 255, 0));
        jrOption1.setText("jRadioButton1");

        buttonGroup1.add(jrOption2);
        jrOption2.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        jrOption2.setForeground(new java.awt.Color(255, 255, 0));
        jrOption2.setText("jRadioButton2");

        buttonGroup1.add(jrOption3);
        jrOption3.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        jrOption3.setForeground(new java.awt.Color(255, 255, 0));
        jrOption3.setText("jRadioButton3");
        jrOption3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrOption3ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jrOption4);
        jrOption4.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        jrOption4.setForeground(new java.awt.Color(255, 255, 0));
        jrOption4.setText("jRadioButton4");
        jrOption4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrOption4ActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/sound.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        jLabel1.setToolTipText("narrator");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(lblUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblLogout)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(440, 440, 440)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(241, 241, 241))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(426, 426, 426)
                        .addComponent(btnPrevious, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(138, 138, 138)
                        .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(125, 125, 125)
                        .addComponent(btnDone, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(127, 127, 127)
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(504, 504, 504)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblQno, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 900, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(0, 416, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(615, 615, 615)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jrOption1)
                    .addComponent(jrOption3))
                .addGap(172, 172, 172)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jrOption2)
                    .addComponent(jrOption4))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLogout)
                    .addComponent(lblUserName))
                .addGap(53, 53, 53)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lblTitle))
                .addGap(35, 35, 35)
                .addComponent(lblQno, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(51, 51, 51)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrOption1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jrOption2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(126, 126, 126)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrOption3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jrOption4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(192, 192, 192)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPrevious)
                    .addComponent(btnDone)
                    .addComponent(btnCancel)
                    .addComponent(btnNext))
                .addGap(135, 135, 135))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        String chosenAnswer = getUserAnswer();
        if (chosenAnswer != null) {
            QuestionPojo question = qstore.getQuestion(pos);
            String correctAnswer = question.getCorrectAnswer();
            AnswerPojo newAnswer = new AnswerPojo(exam.getExamId(), exam.getLanguage(), qno, chosenAnswer, correctAnswer);
            System.out.println("Next :\t\t" + newAnswer);
            AnswerPojo answer = astore.getAnswerByQno(qno);
            if (answer == null) {
                astore.addAnswer(newAnswer);
            } else {
                if (newAnswer.getChosenAnswer().equals(answer.getChosenAnswer()) == false) {
                    int apos = astore.removeAnswer(answer);
                    astore.setAnswerAt(apos, newAnswer);
                }
            }
        }
        pos++;
        if (pos >= qstore.getCount()) {
            pos = 0;
        }
        qno++;
        if (qno > qstore.getCount()) {
            qno = 1;
        }
        lblQno.setText("Question no: " + qno);
        showQuestion();
        
        tv2 = new TextToVoice();
        tv2.speech = txtQuestion.getText();
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        ChoosePaperFrame paperFrame = new ChoosePaperFrame();
        paperFrame.setVisible(true);
        this.dispose();
        vt.stop();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnDoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoneActionPerformed
        String chosenAnswer = getUserAnswer();
        if (chosenAnswer != null) {
            QuestionPojo question = qstore.getQuestion(pos);
            String correctAnswer = question.getCorrectAnswer();
            AnswerPojo newAnswer = new AnswerPojo(exam.getExamId(), exam.getLanguage(), qno, chosenAnswer, correctAnswer);
            System.out.println("Done :\t\t" + newAnswer);
            AnswerPojo answer = astore.getAnswerByQno(qno);
            if (answer == null) {
                astore.addAnswer(newAnswer);
            } else {
                if (newAnswer.getChosenAnswer().equals(answer.getChosenAnswer()) == false) {
                    int apos = astore.removeAnswer(answer);
                    astore.setAnswerAt(apos, newAnswer);
                }
            }
        }
        int right = 0, wrong = 0;
        for (QuestionPojo question : qstore.getAllQuestions()) {
            int qno = question.getQno();
            AnswerPojo answer = astore.getAnswerByQno(qno);
            if (answer == null) {
                continue;
            } else {
                String chosenAnswer1 = answer.getChosenAnswer();
                String correctAnswer = answer.getCorrectAnswer();
                if (chosenAnswer1.equals(correctAnswer)) {
                    ++right;
                } else {
                    ++wrong;
                }
            }
        }           //////////////////
        String reportCard = "Total Questions : " + qstore.getCount();
        reportCard += "\nRight Answers : " + right;
        reportCard += "\nWrong Answers : " + wrong;
        reportCard += "\nUnAttempted : " + (qstore.getCount() - (right + wrong));
        JOptionPane.showMessageDialog(null, reportCard, "Your Result!", JOptionPane.INFORMATION_MESSAGE);

        try {
            PerformancePojo performance = new PerformancePojo(exam.getExamId(), exam.getLanguage(), UserProfile.getUsername(), right, wrong, (qstore.getCount() - (right + wrong)), (double) right / qstore.getCount() * 100);
            PerformanceDao.addPerformance(performance);
            JOptionPane.showMessageDialog(null, "Your performance has been sucessfully added to the Database", "Performance Added", JOptionPane.INFORMATION_MESSAGE);
            ChoosePaperFrame paperFrame = new ChoosePaperFrame();
            paperFrame.setVisible(true);
            this.dispose();
            vt.stop();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error while connecting to database!", "Exception!", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
        // }
    }//GEN-LAST:event_btnDoneActionPerformed

    private void lblLogoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblLogoutMouseClicked
        this.dispose();
        LoginFrame optionsFrame = new LoginFrame();
        optionsFrame.setVisible(true);
        vt.stop();
    }//GEN-LAST:event_lblLogoutMouseClicked

    private void lblLogoutMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblLogoutMouseEntered
        lblLogout.setForeground(Color.WHITE);
        Font f = new Font("Tohoma", Font.ITALIC, 25);
        lblLogout.setFont(f);
    }//GEN-LAST:event_lblLogoutMouseEntered

    private void lblLogoutMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblLogoutMouseExited
        lblLogout.setForeground(new Color(255, 255, 0));
        Font f = new Font("Tohoma", Font.PLAIN, 25);
        lblLogout.setFont(f);
    }//GEN-LAST:event_lblLogoutMouseExited

    private void btnPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviousActionPerformed
        String chosenAnswer = getUserAnswer();
        if (chosenAnswer != null) {
            QuestionPojo question = qstore.getQuestion(pos);
            String correctAnswer = question.getCorrectAnswer();
            AnswerPojo newAnswer = new AnswerPojo(exam.getExamId(), exam.getLanguage(), qno, chosenAnswer, correctAnswer);

            AnswerPojo answer = astore.getAnswerByQno(qno);
            if (answer == null) {
                astore.addAnswer(newAnswer);
            } else {
                if (newAnswer.getChosenAnswer().equals(answer.getChosenAnswer()) == false) {
                    int apos = astore.removeAnswer(answer);
                    astore.setAnswerAt(apos, newAnswer);
                }
            }
        }
        pos--;
        if (pos < 0) {
            pos = qstore.getCount() - 1;
        }
        qno--;
        if (qno <= 0) {
            qno = qstore.getCount();
        }
        lblQno.setText("Question no: " + qno);
        showQuestion();
        
        tv2 = new TextToVoice();
        tv2.speech = txtQuestion.getText();
    }//GEN-LAST:event_btnPreviousActionPerformed

    private void jrOption4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrOption4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jrOption4ActionPerformed

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
       tv2.start();
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jrOption3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrOption3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jrOption3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TakeTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TakeTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TakeTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TakeTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TakeTestFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDone;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrevious;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton jrOption1;
    private javax.swing.JRadioButton jrOption2;
    private javax.swing.JRadioButton jrOption3;
    private javax.swing.JRadioButton jrOption4;
    private javax.swing.JLabel lblLogout;
    private javax.swing.JLabel lblQno;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblUserName;
    private javax.swing.JTextArea txtQuestion;
    // End of variables declaration//GEN-END:variables

    public void loadQuestions() {
        try {
            ArrayList<QuestionPojo> questionList = QuestionDao.getQuestionsByExamId(exam.getExamId());
            for (QuestionPojo obj : questionList) {
                qstore.addQuestion(obj);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error while connecting to database!", "Exception!", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }

    public void showQuestion() {
        QuestionPojo question = qstore.getQuestion(pos);
        buttonGroup1.clearSelection();
        txtQuestion.setText(question.getQuestion());
        txtQuestion.setEditable(false);
        jrOption1.setText(question.getAnswer1());
        jrOption2.setText(question.getAnswer2());
        jrOption3.setText(question.getAnswer3());
        jrOption4.setText(question.getAnswer4());

        AnswerPojo answer = astore.getAnswerByQno(qno);
        if (answer == null) {
            return;
        }
        String chosenAnswer = answer.getChosenAnswer();
        switch (chosenAnswer) {
            case "Answer 1":
                jrOption1.setSelected(true);
                break;
            case "Answer 2":
                jrOption2.setSelected(true);
                break;
            case "Answer 3":
                jrOption3.setSelected(true);
                break;
            case "Answer 4":
                jrOption4.setSelected(true);
                break;
        }
    }

    public String getUserAnswer() {
        if (jrOption1.isSelected()) {
            return "Answer 1";
        } else if (jrOption2.isSelected()) {
            return "Answer 2";
        } else if (jrOption3.isSelected()) {
            return "Answer 3";
        } else if (jrOption4.isSelected()) {
            return "Answer 4";
        } else {
            return null;
        }
    }

    class TextToVoice extends Thread {

        public static final String VOICENAME = "kevin16";
        private Voice voice;
        public String speech = "";

        public void run() {

            try {
                Thread.sleep(700);
                //Voice voice;
                VoiceManager vm = VoiceManager.getInstance();
                voice = vm.getVoice(VOICENAME);
                voice.allocate();
                voice.speak(speech);
            } catch (Exception e) {
                e.printStackTrace();
            }
        }

        public void changeState() {
            voice.deallocate();
        }
    }

    class VoiceToText extends Thread {
        private boolean flag = true;
        public void run() {
            try {
                Thread.sleep(500);
                while (flag) {
                    String speech = LoginSR.speech();
                    System.out.println("speech: Take test "+speech);
                    if (speech.equalsIgnoreCase("option one")) {
                        jrOption1.setSelected(true);
                    } else if (speech.equalsIgnoreCase("option two")) {
                        jrOption2.setSelected(true);
                    } else if (speech.equalsIgnoreCase("option three")) {
                        jrOption3.setSelected(true);
                    } else if (speech.equalsIgnoreCase("option four")) {
                        jrOption4.setSelected(true);
                    } else if (speech.equalsIgnoreCase("<unk>")); else if (speech.equalsIgnoreCase("logout")) {
                        disposeMethod();
                    } else if (speech.equalsIgnoreCase("done")) {
                        btnDone.doClick();
                    } else if (speech.equalsIgnoreCase("next")) {
                        btnNext.doClick();
                    } else if (speech.equalsIgnoreCase("cancel")) {
                        btnCancel.doClick();
                    } else if (speech.equalsIgnoreCase("previous")) {
                        btnPrevious.doClick();
                    } else;
                }
                //recognizer.stopRecognition();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }

    public void disposeMethod() {
        this.dispose();
        LoginFrame loginFrame = new LoginFrame();
        loginFrame.setVisible(true);
        vt.stop();
    }
}
